@page "/forgot-password"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using InventoryManager.Services.Interfaces
@attribute [AllowAnonymous]
@inject UserManager<IdentityUser> UserManager
@inject IInventoryEmailSender EmailSender
@inject NavigationManager Navigation

<PageTitle>Forgot Password - Inventory Manager</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card rounded-2xl shadow-lg mt-5">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h3 class="mb-0">Forgot Password</h3>
                    <p class="mb-0 text-white-50">Reset your password</p>
                </div>
                
                <div class="card-body p-4">
                    @if (!string.IsNullOrEmpty(SuccessMessage))
                    {
                        <div class="alert alert-success rounded-2xl" role="alert">
                            @SuccessMessage
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger rounded-2xl" role="alert">
                            @ErrorMessage
                        </div>
                    }
                    
                    @if (string.IsNullOrEmpty(SuccessMessage))
                    {
                        <form @onsubmit="HandleForgotPassword">
                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" id="email" class="form-control rounded-2xl" 
                                       @bind="Email" 
                                       placeholder="Enter your email address" 
                                       required />
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary rounded-2xl py-2" 
                                        disabled="@IsLoading">
                                    @if (IsLoading)
                                    {
                                        <span>Sending Reset Link...</span>
                                    }
                                    else
                                    {
                                        <span>Send Reset Link</span>
                                    }
                                </button>
                            </div>
                        </form>
                    }
                    
                    <hr class="my-4">
                    
                    <div class="text-center">
                        <p class="text-muted mb-2">Remember your password?</p>
                        <a href="login" class="btn btn-outline-primary rounded-2xl">
                            Back to Login
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private bool IsLoading { get; set; } = false;
    private string ErrorMessage { get; set; } = string.Empty;
    private string SuccessMessage { get; set; } = string.Empty;

    private async Task HandleForgotPassword()
    {
        if (string.IsNullOrWhiteSpace(Email))
        {
            ErrorMessage = "Please enter your email address.";
            return;
        }

        IsLoading = true;
        ErrorMessage = string.Empty;
        SuccessMessage = string.Empty;

        try
        {
            var user = await UserManager.FindByEmailAsync(Email);
            
            if (user == null)
            {
                // Don't reveal if the user exists or not for security reasons
                SuccessMessage = "If an account with that email address exists, a password reset link has been sent.";
                return;
            }

            // Generate password reset token
            var token = await UserManager.GeneratePasswordResetTokenAsync(user);
            
            // Create reset link
            var resetLink = $"{Navigation.BaseUri}reset-password?email={Uri.EscapeDataString(Email)}&token={Uri.EscapeDataString(token)}";
            
            // Send email
            var subject = "Reset Your Password - Inventory Manager";
            var htmlMessage = $@"
                <h2>Password Reset Request</h2>
                <p>Hello,</p>
                <p>You have requested to reset your password for the Inventory Manager system.</p>
                <p>Click the link below to reset your password:</p>
                <p><a href='{resetLink}' style='background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 8px; display: inline-block;'>Reset Password</a></p>
                <p>If you didn't request this password reset, please ignore this email.</p>
                <p>This link will expire in 1 hour.</p>
                <p>Best regards,<br>Inventory Manager Team</p>";
            
            var textMessage = $@"
                Password Reset Request
                
                Hello,
                
                You have requested to reset your password for the Inventory Manager system.
                
                Click the link below to reset your password:
                {resetLink}
                
                If you didn't request this password reset, please ignore this email.
                
                This link will expire in 1 hour.
                
                Best regards,
                Inventory Manager Team";
            
            await EmailSender.SendEmailAsync(Email, subject, htmlMessage, textMessage);
            
            SuccessMessage = "If an account with that email address exists, a password reset link has been sent.";
        }
        catch
        {
            ErrorMessage = "An error occurred while processing your request. Please try again.";
            // Log the exception in production
        }
        finally
        {
            IsLoading = false;
        }
    }
}
